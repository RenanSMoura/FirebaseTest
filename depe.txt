def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}


ext.depends = [
        'build': [
                'gradle'        : "com.android.tools.build:gradle:$versions.gradle",
                'dexCount'      : "com.getkeepsafe.dexcount:dexcount-gradle-plugin:$versions.dexCount",
                'realm'         : "io.realm:realm-gradle-plugin:$versions.realm",
                'googleServices': "com.google.gms:google-services:$versions.google.googleServices",
                'kotlin'        : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        ]
]


ext {
    supportLibary = Group {
        implementation "com.android.support:support-v4:$versions.google.supportVersion"
        implementation "com.android.support:cardview-v7:$versions.google.supportVersion"
        implementation "com.android.support:design:$versions.google.supportVersion"
        implementation "com.android.support:appcompat-v7:$versions.google.supportVersion"
        implementation "com.android.support:recyclerview-v7:$versions.google.supportVersion"

    }

    ui = Group {
        implementation "com.android.support.constraint:constraint-layout:$versions.constraintLayout"
        implementation "com.jakewharton:butterknife:$versions.butterKnife"
        kapt "com.jakewharton:butterknife-compiler:$versions.butterKnife"
        implementation("com.github.hotchemi:permissionsdispatcher:$versions.permissionDispatcher") {
            transitive = true
        }
        kapt "com.github.hotchemi:permissionsdispatcher-processor:$versions.permissionDispatcher"

        implementation "com.github.afollestad.material-dialogs:core:0.8.5.8@aar"
        implementation "ca.barrenechea.header-decor:header-decor:$versions.headerDecor"
        implementation "com.makeramen:roundedimageview:$versions.roundedImageView"
        implementation "com.squareup.picasso:picasso:$versions.picasso"
        implementation "com.daimajia.easing:library:$versions.daimjiaEasing"
        implementation "com.daimajia.androidanimations:library:$versions.daimjiaAnimations"

    }

    countryPicker = Group {
        implementation "com.hbb20:ccp:$versions.countryPicker"
    }

    kotlin = Group {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    }

    anko = Group {
        implementation "org.jetbrains.anko:anko:$versions.anko"
    }


    playServices = Group {

        implementation "com.google.android.gms:play-services-location:$versions.google.googlePlayVersion"
        implementation "com.google.android.gms:play-services-ads:$versions.google.googlePlayVersion"
        implementation "com.google.android.gms:play-services-gcm:$versions.google.googlePlayVersion"
        implementation "com.google.android.gms:play-services-analytics:$versions.google.googlePlayVersion"
        implementation "com.google.android.gms:play-services-auth:$versions.google.googlePlayVersion"
    }

    /** BEFORE CHANGING googlePlayVersion and googleSupportVersion, check this link!! **/
    /** https://github.com/firebase/FirebaseUI-Android/releases **/
    /** https://github.com/permissions-dispatcher/PermissionsDispatcher/blob/master/gradle.properties **/


    firebase = Group {
        implementation "com.google.firebase:firebase-config:$versions.firebase.config"
        implementation "com.google.firebase:firebase-auth:$versions.firebase.auth"
        implementation 'com.firebase:digitsmigrationhelpers:0.1.1'
        implementation "com.google.firebase:firebase-core:$versions.firebase.core"
    }

    crashLytics = Group {
        implementation("com.crashlytics.sdk.android:crashlytics:$versions.crashlytics") {
            transitive = true
        }
    }

    log = Group {
        implementation "com.jakewharton.timber:timber:$versions.timber"
    }

    httpBuilder = Group {
        implementation "com.squareup.retrofit2:converter-gson:$versions.gson"
        implementation("com.squareup.retrofit2:retrofit:$versions.retrofit") {
            // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
            exclude module: 'okhttp'
        }
        implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"
        implementation "com.squareup.okhttp3:logging-interceptor:$versions.okHttpLogInterceptor"

        implementation "com.lbslocal.findrix:library:$versions.findrix"
        implementation "org.apache.httpcomponents:httpmime:$versions.httpMime"
    }

    utils = Group {
        implementation "com.google.code.gson:gson:$versions.gson"
        implementation "com.soundcloud.android:android-crop:$versions.soundCloundAndroidCrop"
        implementation "com.nostra13.universalimageloader:universal-image-loader:$versions.universalImageLoader"
        implementation "com.google.guava:guava:$versions.guava"
        implementation "com.android.support:multidex:$versions.multidex"
        implementation "com.airbnb:deeplinkdispatch:$versions.deepLinkDispatch"
        kapt "com.airbnb:deeplinkdispatch-processor:$versions.deepLinkDispatch"
    }

    localytics = Group {
        implementation "com.localytics.android:library:$versions.localytics"
    }

    ////////// TEST DEPENDENCIES ////////

    //TODO REVER ESSE GRUPO CONFORME FOR ADICIONADO MAIS LIBS DE TESTES
    testGroup = Group {
        androidTestImplementation "junit:junit:$versions.jUnit"
        androidTestImplementation "io.reactivex:rxjava:$versions.rxJava"
        androidTestImplementation "com.android.support.test:runner:$versions.testRunner"
        androidTestImplementation "com.android.support.test:rules:$versions.testRunner"
        androidTestImplementation "com.android.support:support-annotations:$versions.google.supportVersion"
    }


}